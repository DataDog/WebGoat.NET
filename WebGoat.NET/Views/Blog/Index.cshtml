@model IEnumerable<WebGoat.NET.Models.BlogPost>
@inject WebGoat.NET.Data.BlogRepository blogRepository

@{
    ViewData["Title"] = "Blog";
}

<div class="container mt-5">
    <h2>Blog Posts</h2>
    <div class="row">
        @foreach (var post in Model)
        {
            <div class="col-12 mb-3">
                <div class="card h-100">
                    <div class="card-body">
                        <h5 class="card-title">@post.Title</h5>
                        <p class="card-text"><small class="text-muted">By @post.AuthorName on @post.CreatedAt.ToString("yyyy-MM-dd")</small></p>
                        <p class="card-text">@(Html.Raw(post.Content[..Math.Min(post.Content.Length, 100)]))...</p>
                        <a asp-action="Index" asp-route-id="@post.Id" class="btn btn-primary">Read More</a>
                    </div>
                    <div class="card-footer">
                        <h6>Comments</h6>
                        @{
                            var comments = blogRepository.GetCommentsForPost(post.Id, 3);
                        }
                        @if (comments.Any())
                        {
                            @foreach (var comment in comments)
                            {
                                <div class="list-group-item border rounded mb-2 p-3">
                                    <p>@Html.Raw(comment.Content)</p>
                                    <div class="text-muted"><small>By @comment.AuthorName on @comment.CreatedAt.ToString("yyyy-MM-dd")</small></div>
                                </div>
                            }
                        }
                        else
                        {
                            <a asp-action="Index" asp-route-id="@post.Id" class="btn btn-secondary">Comment Now</a>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>